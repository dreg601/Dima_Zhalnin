Задание 1	Напишите скрипт, который выведите сумму начислений за 2020 год абонентов, 
которые были активны более 3 месяцев в 2020г. Активным считается абонент, 
у которого в таблице CURRENT_ABONBASE в столбце "_1М" проставлена 1.

Ответ:
SELECT ACCOUNT_ID, sum(ACCRUAL) 
from ACCRUAL a
join CURRENT_ABONBASE b on (a.ACCOUNT_ID=b.ls_num)
where _1M = 1 and PERIOD_ <= '01.10.2020'
group by ACCOUNT_ID

Задание 2	Дана таблица по абонентам. Какой ответ выведит скрипт: SELECT AVG(revenue) FROM Fact

Ответ: 100.000 (значение null не считается. По сути, AVG() подразумевается с условием where 'столбец' is not null).

Задание 3	Напишите скрипт, который выводит только абонентов с отрицательным балансом и упорядочьте по убыванию баланса с ФИО (ФИО в одном столбце)

Заменю FIO на familiya, imya, otchestvo (так как в таблице не может быть несколько столбцов с одинаковым названием).

Ответ:
SELECT CONCAT(familiya, '', imya, '', otchestvo) as FIO
from fio a
join balance b on (a.abon=b.abon)
where balance < 0
order by FIO

Если нужно также вывести сумму, к SELECT добавляем balance.

Задание 4	В таблице есть абоненты, на которых приходится более одного устройства (телефон, планшет и пр.). 
Напишите скрипт, который сформирует таблицу, где на 1 абонента будет приходиться только 1 устройство с наибольшим потреблением трафика.									

Ответ:
WITH a as(
	SELECT MAX("TRAFFIC") as max_traff
	FROM device
	GROUP BY abon
)

SELECT b.abon, "ID_DEVICE", "TYPE_DEVICE", "TRAFFIC"
	FROM device b
	join a on (a.max_traff=b."TRAFFIC");

Для чего тут нужен WITH: чтобы найти наибольшее значения в таблице, сгруппированной по столбцу abon.
Иначе, в таблице нужно делать больше GROUP BY и в таблице будут не уникальные значения (несколько устройств).